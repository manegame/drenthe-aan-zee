body {
  @include hide-scroll;
  margin: 0;
  padding: 0;
}

html {
  overflow: -moz-scrollbars-none;
}

.opening {
  width: 100vw;
  height: 100vh;
  background: black;
  text-align: center;
  #player {
      // DEBUG
      // border: 1px dashed red;
      // transition: all 3s ease-out;
  }
}

h1 {
  color: white;
  font-size: 20vh;
  line-height: 18vh;
  @include center;
  top: 45%;
  cursor: pointer;
}

#controls {
  z-index: 999;
  position: fixed;
  bottom: 0;
  left: $track-height;
  margin-left: 10px;
  margin-bottom: 10px;
  p {
    color: white;
  }

}


.choice {
  height: 100vh;
  width: 100vw;

  position: fixed;
  top: 0;
  left: 0;

  color: white;

  background: blue;

  display: none;

  z-index: 999999999;
  p {
    color: black;
  }
}





// VERTICAL
//

// input[type=range][orient=vertical] {
//     writing-mode: bt-lr; /* IE */
//     -webkit-appearance: slider-vertical; /* WebKit */
//     height: 90vh;
// }

// // Styling Cross-Browser Compatible Range Inputs with Sass
// // Github: https://github.com/darlanrod/input-range-sass
// // Author: Darlan Rod https://github.com/darlanrod
// // Version 1.3.0
// // MIT License
//

@mixin shadow($shadow-size, $shadow-blur, $shadow-color) {
  box-shadow: $shadow-size $shadow-size $shadow-blur $shadow-color, 0 0 $shadow-size lighten($shadow-color, 5%);
}

@mixin track {
  cursor: pointer;
  height: $track-height;
  transition: all .2s ease;
  width: $track-width;
}

@mixin thumb {
  @include shadow($thumb-shadow-size, $thumb-shadow-blur, $thumb-shadow-color);
  background: $thumb-color;
  border: $thumb-border-width solid $thumb-border-color;
  border-radius: $thumb-radius;
  cursor: pointer;
  height: $thumb-height;
  width: $thumb-width;
}

[type='range'] {

  position: absolute;
  z-index: 999999;
  transform-origin: top left;
  transform: rotateZ(270deg) translateX(calc(-100%));

  -webkit-appearance: none;
  margin: 0;
  width: $track-width;

  &:focus {
    outline: 0;

    &::-webkit-slider-runnable-track {
      background: lighten($track-color, $contrast);
    }

    &::-ms-fill-lower {
      background: $track-color;
    }

    &::-ms-fill-upper {
      background: lighten($track-color, $contrast);
    }
  }

  &::-webkit-slider-runnable-track {
    @include track;
    @include shadow($track-shadow-size, $track-shadow-blur, $track-shadow-color);
    background: $track-color;
    border-radius: $track-radius;
  }

  &::-webkit-slider-thumb {
    @include thumb;
    -webkit-appearance: none;
  }

  &::-moz-range-track {
    @include track;
    @include shadow($track-shadow-size, $track-shadow-blur, $track-shadow-color);
    background: $track-color;
    border-radius: $track-radius;
  }

  &::-moz-range-thumb {
    @include thumb;
  }

  &::-ms-track {
    @include track;
    background: transparent;
    border-color: transparent;
    border-width: ($thumb-height / 2) 0;
    color: transparent;
  }

  &::-ms-fill-lower {
    @include shadow($track-shadow-size, $track-shadow-blur, $track-shadow-color);
    background: darken($track-color, $contrast);
    border: $track-border-width solid $track-border-color;
    border-radius: $track-radius * 2;
  }

  &::-ms-fill-upper {
    @include shadow($track-shadow-size, $track-shadow-blur, $track-shadow-color);
    background: $track-color;
    border: $track-border-width solid $track-border-color;
    border-radius: $track-radius * 2;
  }

  &::-ms-thumb {
    @include thumb;
    margin-top: 0;
  }
}
